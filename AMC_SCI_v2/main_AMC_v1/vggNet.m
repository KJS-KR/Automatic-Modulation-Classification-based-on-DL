function output = vggNet(spf, modTypeNum)

    network = [
        imageInputLayer([1 spf 2],"Name","signalInput","Normalization","none")
        convolution2dLayer([3 3],64,"Name","conv1_1","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu1_1")
        convolution2dLayer([3 3],64,"Name","conv1_2","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu1_2")
        maxPooling2dLayer([1 2],"Name","pool1","Stride",[2 2])
        convolution2dLayer([3 3],128,"Name","conv2_1","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu2_1")
        convolution2dLayer([3 3],128,"Name","conv2_2","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu2_2")
        maxPooling2dLayer([1 2],"Name","pool2","Stride",[2 2])
        convolution2dLayer([3 3],256,"Name","conv3_1","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu3_1")
        convolution2dLayer([3 3],256,"Name","conv3_2","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu3_2")
        convolution2dLayer([3 3],256,"Name","conv3_3","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu3_3")
        maxPooling2dLayer([1 2],"Name","pool3","Stride",[2 2])
        convolution2dLayer([3 3],512,"Name","conv4_1","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu4_1")
        convolution2dLayer([3 3],512,"Name","conv4_2","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu4_2")
        convolution2dLayer([3 3],512,"Name","conv4_3","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu4_3")
        maxPooling2dLayer([1 2],"Name","pool4","Stride",[2 2])
        convolution2dLayer([3 3],512,"Name","conv5_1","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu5_1")
        convolution2dLayer([3 3],512,"Name","conv5_2","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu5_2")
        convolution2dLayer([3 3],512,"Name","conv5_3","Padding",[1 1 1 1],"WeightL2Factor",0)
        reluLayer("Name","relu5_3")
        maxPooling2dLayer([1 2],"Name","pool5","Stride",[2 2])
        fullyConnectedLayer(4096,"Name","fc6","WeightL2Factor",0)
        reluLayer("Name","relu6")
        dropoutLayer(0.5,"Name","drop6")
        fullyConnectedLayer(4096,"Name","fc7","WeightL2Factor",0)
        reluLayer("Name","relu7")
        dropoutLayer(0.5,"Name","drop7")
        fullyConnectedLayer(modTypeNum,"Name","fc8","WeightL2Factor",0)
        softmaxLayer("Name","prob")
        classificationLayer("Name","Output")];

    output = network;
end

